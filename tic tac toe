def print_board(board):
    for row in board:
        print("|".join(row))
        print("-" * 5)

def check_winner(board, player):
    # Check rows, columns, and diagonals for a win
    for i in range(3):
        if all(board[i][j] == player for j in range(3)) or all(board[j][i] == player for j in range(3)):
            return True
    if all(board[i][i] == player for i in range(3)) or all(board[i][2 - i] == player for i in range(3)):
        return True
    return False

def is_board_full(board):
    # Check if the board is full
    return all(board[i][j] != ' ' for i in range(3) for j in range(3))

def tic_tac_toe():
    # Initialize an empty 3x3 board
    board = [[' ' for _ in range(3)] for _ in range(3)]

    # Define players and symbols
    players = {'Player 1': 'X', 'Player 2': 'O'}
    current_player = 'Player 1'

    # Main game loop
    while True:
        print_board(board)

        # Get the current player's move
        row = int(input(f"{current_player}, enter row (0, 1, or 2): "))
        col = int(input(f"{current_player}, enter column (0, 1, or 2): "))

        # Check if the chosen cell is empty
        if board[row][col] == ' ':
            # Update the board with the player's symbol
            board[row][col] = players[current_player]

            # Check if the current player wins
            if check_winner(board, players[current_player]):
                print_board(board)
                print(f"{current_player} wins!")
                break

            # Check if the board is full (a tie)
            if is_board_full(board):
                print_board(board)
                print("It's a tie!")
                break

            # Switch to the other player
            current_player = 'Player 2' if current_player == 'Player 1' else 'Player 1'
        else:
            print("Cell already taken. Try again.")

if __name__ == "__main__":
    tic_tac_toe()
